import unittest
from student_manager import StudentManager

class TestStudentManager(unittest.TestCase):

    def setUp(self):
        """Set up a fresh StudentManager before each test"""
        self.manager = StudentManager()

    def test_add_student(self):
        """Test that a student is added and the list is updated"""
        self.manager.add_student("Ponnu", 13, "A++")
        self.assertEqual(len(self.manager.students), 1)
        # Check that student ID is unique
        student_id = self.manager.students[0].student_id
        self.assertIsNotNone(student_id)

    def test_find_student_by_id(self):
        """Test that we can find a student by their ID"""
        student = self.manager.add_student("Bincy", 13, "A+")
        found = self.manager.find_student_by_id(student.student_id)
        self.assertEqual(found.name, "Bincy")
        self.assertIsNone(self.manager.find_student_by_id("invalid_id"))

    def test_delete_student(self):
        """Test that a student can be deleted successfully"""
        student = self.manager.add_student("Anil", 24, "C")
        result = self.manager.delete_student(student.student_id)
        self.assertTrue(result)
        self.assertEqual(len(self.manager.students), 0)

    def test_delete_non_existent_student(self):
        """Test that attempting to delete a non-existent student returns False"""
        result = self.manager.delete_student("non_existent_id")
        self.assertFalse(result)

    def test_export_and_load(self):
        """Test exporting and loading student data"""
        student = self.manager.add_student("Ravi", 13, "B")
        exported = self.manager.export_students()
        new_manager = StudentManager()
        new_manager.load_students(exported)
        self.assertEqual(len(new_manager.students), 1)
        self.assertEqual(new_manager.students[0].name, "Ravi")

    def test_student_id_uniqueness(self):
        """Test that each student has a unique ID"""
        student1 = self.manager.add_student("Alice", 15, "B")
        student2 = self.manager.add_student("Bob", 16, "A")
        self.assertNotEqual(student1.student_id, student2.student_id)

if __name__ == '__main__':
    unittest.main()
